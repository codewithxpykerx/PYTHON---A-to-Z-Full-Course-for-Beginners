1
00:00:01,270 --> 00:00:06,740
Heidi folks in this video to do real good looks and by that I mean for Luban by them.

2
00:00:06,820 --> 00:00:11,850
So what is and what actually is Luby looping does nothing with the mechanism of it written with sequels

3
00:00:11,870 --> 00:00:16,430
or headaches which are nothing but string list double and dict.

4
00:00:16,470 --> 00:00:21,090
So what does it need to be looping is required to the beat and execution of a block of code.

5
00:00:21,100 --> 00:00:22,540
Is that a number of times.

6
00:00:22,850 --> 00:00:27,380
I like to do an example for each and every sequence of a day.

7
00:00:27,440 --> 00:00:33,350
But for example string list double date before that this was indexable.

8
00:00:33,640 --> 00:00:38,440
What does it mean was Biden ablaze eloping.

9
00:00:38,650 --> 00:00:47,020
I mean by then blaze be on each and every item of sequence stack and assigns that particular item to

10
00:00:47,020 --> 00:00:48,640
this variable called 8.

11
00:00:48,820 --> 00:00:50,820
And we are going to pin that variable.

12
00:00:51,130 --> 00:00:51,870
All right.

13
00:00:52,030 --> 00:00:55,950
Let's open the Python interpreter and write give you an example for each and the

14
00:01:08,240 --> 00:01:13,520
right time and by the end of I think you example we do a lot of text.

15
00:01:13,540 --> 00:01:16,650
One is a string and one is a list.

16
00:01:16,790 --> 00:01:29,740
And he said of your seven string.

17
00:01:31,040 --> 00:01:31,980
All right.

18
00:01:32,000 --> 00:01:36,290
Now I want to bring each and every character of this string variable.

19
00:01:36,290 --> 00:01:43,740
So initially we have declared a variable called string variable and assign a value string to this variable.

20
00:01:43,850 --> 00:01:56,710
Let's print each and every character by using for loop in Python from.

21
00:01:58,960 --> 00:02:01,790
We have the international force base and then

22
00:02:13,200 --> 00:02:14,010
right.

23
00:02:14,340 --> 00:02:19,760
So this was the indented output of printing each and every Goetic separately by using the final look

24
00:02:20,040 --> 00:02:21,520
let's apply the same logic.

25
00:02:21,540 --> 00:02:25,320
I mean the same follow on the list that it

26
00:02:44,040 --> 00:02:51,370
right we have initialized a variable call list variable and assign a datatype of a list with two items

27
00:02:51,370 --> 00:02:55,100
in it and which has a list of two items in it.

28
00:02:55,180 --> 00:02:56,570
If you've been pleased to be able

29
00:03:02,160 --> 00:03:08,720
allright oops be vulgar to call me that.

30
00:03:09,620 --> 00:03:11,400
Now let's bring Duguay.

31
00:03:11,410 --> 00:03:11,890
There you go.

32
00:03:11,890 --> 00:03:13,820
So we have two items in this list.

33
00:03:13,990 --> 00:03:15,830
Let's play the for loop on this.

34
00:03:15,960 --> 00:03:17,080
But Igla list available

35
00:03:30,040 --> 00:03:35,980
now they intended should be Halo and war should be been updated as the two items independently in the

36
00:03:35,980 --> 00:03:37,550
list.

37
00:03:38,080 --> 00:03:39,000
All right.

38
00:03:39,190 --> 00:03:46,240
So this is all about playing follow up on different data digs invite them to rebuild this Valo with

39
00:03:46,400 --> 00:03:50,950
another function call arranged range invite that range is nothing with the building by that function

40
00:03:51,220 --> 00:03:52,840
which is to the degree to list stuff.

41
00:03:52,930 --> 00:03:57,330
Nimbus made a predefined them but even that function.

42
00:03:57,460 --> 00:03:58,530
Let's see an example for the

43
00:04:04,430 --> 00:04:08,180
little Pindi to see what other elements in that particular area.

44
00:04:08,550 --> 00:04:09,330
All right.

45
00:04:09,500 --> 00:04:17,540
So it has created a numbers from 0 9 with this built in function let being that each and every variable

46
00:04:18,290 --> 00:04:20,310
each and every number independently

47
00:04:24,570 --> 00:04:27,250
they will.

48
00:04:27,530 --> 00:04:32,900
So this is all about applying for lobes are not a description of a for loop in Python.

49
00:04:32,900 --> 00:04:33,850
Thanks guys.

50
00:04:33,890 --> 00:04:36,570
We'll try to do another topic in our next video.

51
00:04:36,650 --> 00:04:38,280
Thanks very much.

