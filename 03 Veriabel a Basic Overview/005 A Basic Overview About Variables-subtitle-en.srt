1
00:00:00,560 --> 00:00:06,540
Hello guys in the previous tutorial we have seen how to execute a simple hello world program.

2
00:00:06,670 --> 00:00:09,910
And in this tutorial we learn something about variables.

3
00:00:10,240 --> 00:00:13,160
So what is mean by a variable.

4
00:00:14,320 --> 00:00:15,000
Yes.

5
00:00:15,070 --> 00:00:16,060
OK.

6
00:00:16,550 --> 00:00:25,360
It is nothing but a storage location location where your doctor is taught you can say whatever type

7
00:00:25,360 --> 00:00:26,240
of value we need.

8
00:00:26,380 --> 00:00:32,000
And a reasonable value can be changed on assignment dynamically and run them during program execution.

9
00:00:32,440 --> 00:00:34,210
So how to create a variable in Python.

10
00:00:34,210 --> 00:00:40,090
So these are the syntax of creating a variable and by then it was nothing but for example let's see

11
00:00:40,180 --> 00:00:45,910
and let's say this following statement We are creating a variable name called Word and assigning it

12
00:00:46,570 --> 00:00:49,830
value Hello World to is variable called what.

13
00:00:50,200 --> 00:00:55,160
When you bring this war as we had in the previous two areas you'll get hello last spring day.

14
00:00:55,450 --> 00:00:57,930
So let's check out some examples.

15
00:00:58,040 --> 00:01:02,170
Problematically inter-communal as well as scripts.

16
00:01:02,650 --> 00:01:04,660
And as of now let's check.

17
00:01:04,660 --> 00:01:11,530
All right let's see how this variable declaration is done in other programming languages like Java

18
00:01:14,420 --> 00:01:15,000
here.

19
00:01:15,060 --> 00:01:19,530
Equal to same is used to assign values to variables.

20
00:01:19,820 --> 00:01:21,900
Let's dig into the construction

21
00:01:24,440 --> 00:01:25,160
here.

22
00:01:25,380 --> 00:01:32,750
We have created a variable called member variable and assigned a value of 10 to this variable and the

23
00:01:32,760 --> 00:01:34,170
dotted line as in.

24
00:01:34,230 --> 00:01:35,610
This is the most important part.

25
00:01:35,620 --> 00:01:41,080
In other type of in other languages.

26
00:01:41,810 --> 00:01:50,060
Now the number of variables stores only in these are values in it because we have declared this number

27
00:01:50,060 --> 00:01:52,350
variable of God or God.

28
00:01:52,400 --> 00:01:59,480
Similarly in case of other statements by examples string available we have created a string variable

29
00:01:59,570 --> 00:02:05,560
and assign the value lowballed to the string variable often datatype as string and hence string variable

30
00:02:05,570 --> 00:02:09,590
stores only a string that they want.

31
00:02:09,590 --> 00:02:12,990
Similarly with the case of floor variable.

32
00:02:13,370 --> 00:02:17,330
But in case of Python there is no need of declaration.

33
00:02:17,330 --> 00:02:24,780
I mean there is no need to be clear what I mean the Dobber types of variables.

34
00:02:24,920 --> 00:02:29,060
In brief what I mean there is no declaration of variables neither.

35
00:02:29,120 --> 00:02:35,120
And you can get them McAlary at runtime in the program do what what I mean.

36
00:02:35,360 --> 00:02:36,220
OK here you go.

37
00:02:36,230 --> 00:02:41,180
In case of Job and C other programming languages you need be explicit Lydick and declare war type of

38
00:02:41,180 --> 00:02:41,980
data.

39
00:02:42,110 --> 00:02:43,880
You need to storing the variable.

40
00:02:43,880 --> 00:02:48,580
It means a variable declaration isn't needed according to data.

41
00:02:49,040 --> 00:02:52,900
As we have discussed in this example Hensick is manageable.

42
00:02:52,900 --> 00:02:55,630
Declare together datatype in case of other programming languages.

43
00:02:55,790 --> 00:03:03,500
But as we have discussed in case of Biden there is no need of explicit declaration of types.

44
00:03:04,320 --> 00:03:09,970
When grading articulating declaring the variables we'll see that in the following example.

45
00:03:10,740 --> 00:03:13,180
Let's take this statement.

46
00:03:13,320 --> 00:03:14,790
We have declared.

47
00:03:14,850 --> 00:03:19,340
We remove all independent variable and assign a value to it.

48
00:03:19,680 --> 00:03:24,870
And similarly with the other variables in case substring variable we have created.

49
00:03:25,350 --> 00:03:33,890
We have as same as drink on hello world this being the table and the value of one 20.00 is bloviated.

50
00:03:33,920 --> 00:03:40,080
So how does Python know what type of data datatype to be assigned to this particular variable.

51
00:03:40,080 --> 00:03:44,900
So that's an interesting question and interesting future feature of Biden.

52
00:03:45,270 --> 00:03:53,520
So by itself I Uniface what type of datatype it garding I mean according to the value you are saying

53
00:03:53,530 --> 00:03:56,610
to this variable dynamically entered into runtime.

54
00:03:56,640 --> 00:04:03,240
For example you have assigned it then value is indeed available and during runtime during the execution

55
00:04:03,240 --> 00:04:04,540
of the program by done.

56
00:04:04,690 --> 00:04:06,460
I didn't deifies another day of this.

57
00:04:06,490 --> 00:04:07,530
These are valuable.

58
00:04:07,590 --> 00:04:12,410
Based on this based on the data you have assigned to this particular variable.

59
00:04:12,570 --> 00:04:20,020
Similarly in case of the string variable by Biden identifies the datatype of this string variable as

60
00:04:20,030 --> 00:04:24,000
screen based on the value you have assigned to the weather string.

61
00:04:24,000 --> 00:04:26,880
By then I didn't deface the data date as string.

62
00:04:26,880 --> 00:04:31,430
Similarly with variables flawed variable and list variable.

63
00:04:31,620 --> 00:04:40,810
Let's implement these examples programmatically to look into that and also to restrict open the terminal

64
00:04:40,870 --> 00:04:41,980
and open the to

65
00:04:48,090 --> 00:04:50,580
OK we are into an interpreter.

66
00:04:50,910 --> 00:05:44,030
Let's create some variables with the different bands.

67
00:05:44,410 --> 00:05:54,460
OK here we have created five variables a b c d e f and assign different dagger values to it in guess

68
00:05:54,460 --> 00:05:55,790
of and we have a sign.

69
00:05:55,800 --> 00:05:58,270
And in this one too.

70
00:05:58,610 --> 00:06:00,880
And hello world.

71
00:06:00,880 --> 00:06:06,000
In case of we have assigned a string called Hello World to be.

72
00:06:06,340 --> 00:06:14,240
And similarly with other variable C D E F and F F E and D These are the list.

73
00:06:14,290 --> 00:06:17,770
And this was the study done it up and it was a double decker.

74
00:06:17,800 --> 00:06:21,320
Don't worry about this we'll begin to win.

75
00:06:21,420 --> 00:06:26,460
And then in the next two years for this kind of data types.

76
00:06:26,820 --> 00:06:27,370
OK.

77
00:06:27,490 --> 00:06:38,910
So let's bring these variables.

78
00:06:40,140 --> 00:06:46,060
Up by print all the values of the variables that are stored in their memory locations.

79
00:06:46,300 --> 00:06:46,770
OK.

80
00:06:46,830 --> 00:06:49,820
So you can able to identify.

81
00:06:49,870 --> 00:06:56,770
I mean you can able to ask them what type of data at particular value storing it by using a function

82
00:06:56,770 --> 00:06:58,160
called type.

83
00:06:58,300 --> 00:07:01,760
For example let's take the variable.

84
00:07:02,170 --> 00:07:07,190
You want to check what was the exact datatype of that particular variable.

85
00:07:07,330 --> 00:07:15,610
You can you can do so by using a function call type.

86
00:07:16,030 --> 00:07:20,900
So you can able to see here the datatype of the particular variable was in.

87
00:07:20,950 --> 00:07:23,960
Since you have assigned an and indiscernible value do that.

88
00:07:24,130 --> 00:07:28,470
Similarly we can to check the other day of all the other remaining variables

89
00:07:31,560 --> 00:07:32,370
B.

90
00:07:33,150 --> 00:07:35,460
And it was stream.

91
00:07:35,670 --> 00:07:43,900
Since we have a same as string value in the debatable B be similarly beginning to check the types of

92
00:07:43,900 --> 00:07:53,580
all the remaining datatypes.

93
00:07:56,730 --> 00:08:00,380
There you go the dagger type of see was flawed.

94
00:08:00,500 --> 00:08:07,270
The dagger type of D was elist the datatype of he was a dictionary the datatype of a variable.

95
00:08:07,270 --> 00:08:10,150
It was double.

96
00:08:10,190 --> 00:08:17,580
So in this way you can able to declare the variables and assign different types of different Dagar type

97
00:08:17,900 --> 00:08:22,860
of variables to that particular variables and Biden doesn't rate stuff identifying the datatype of that

98
00:08:22,860 --> 00:08:24,280
particular variable.

99
00:08:24,480 --> 00:08:32,460
And you can also you can also be able to check what type of data a particular variable stored by using

100
00:08:32,460 --> 00:08:35,370
it by Done builtin function called Type.

101
00:08:35,580 --> 00:08:44,150
And one more important thing was during declaring or initialization of the variables you need to take

102
00:08:44,150 --> 00:08:46,520
it off not using the by default.

103
00:08:46,580 --> 00:08:55,080
What all get here Python comes with a list of keywords that can be used out of the box from Python.

104
00:08:55,100 --> 00:08:58,730
Let's see what other list of key words that are available from Biden.

105
00:09:02,830 --> 00:09:07,470
So these are the list of words that comes with Python out of the box.

106
00:09:07,510 --> 00:09:18,350
And as break except So when you are declaring a particular variable b I mean be careful not to use.

107
00:09:18,670 --> 00:09:23,520
I mean every word from one of these alist if you lose Joe Biden will 20 runs off you.

108
00:09:23,590 --> 00:09:24,570
You cannot use that.

109
00:09:24,580 --> 00:09:25,440
Let's check this

110
00:09:31,690 --> 00:09:33,120
see you see.

111
00:09:33,130 --> 00:09:34,450
Biden has told.

112
00:09:34,520 --> 00:09:36,480
You're gonna be able to use that.

113
00:09:36,670 --> 00:09:44,560
And it was and it was indexed in maliks index because you aren't able to use the default Python keyboard

114
00:09:44,620 --> 00:09:46,120
as a variable here.

115
00:09:48,320 --> 00:09:53,780
So Python knows what type of data source innervated been doing based on the type of value you assign

116
00:09:53,780 --> 00:09:54,320
to it.

117
00:09:59,490 --> 00:10:05,520
In Python you can also do some multiple assignments multiple times.

118
00:10:05,540 --> 00:10:09,480
OK so you can understand by example

119
00:10:23,110 --> 00:10:31,510
from this statement We have created three variables a b c a daytime and assigned a value one to it.

120
00:10:32,170 --> 00:10:34,050
So this is called multiple assignment.

121
00:10:34,090 --> 00:10:38,290
We can assign a value to multiple variables and then in Python.

122
00:10:38,380 --> 00:10:47,250
Similarly you can able to check what type of data it has to as I have previously if it was and when

123
00:10:47,270 --> 00:10:57,290
you check this type for other variables B and C and the same type was in.

124
00:10:57,390 --> 00:11:04,490
And also you can you can both forms of operations on the table whaleboat if you would like for example

125
00:11:06,810 --> 00:11:26,570
create an indecent variable.

126
00:11:26,970 --> 00:11:35,520
Now you can able to pull from some of them into corporations like plus minus in India on the table variables

127
00:11:35,520 --> 00:11:38,050
that we have declared or let's do that

128
00:11:48,190 --> 00:11:58,110
Deeble we have the output of 30 when we added been we added that able to whaleboat and then important

129
00:11:58,440 --> 00:12:06,020
point to note here was you can do or even book from a domestic operations on the same Dagar variables

130
00:12:06,390 --> 00:12:11,560
for example get into variable and into variable too are the variables of God today.

131
00:12:11,610 --> 00:12:18,060
In this sense we have a saying and then to each other in these sets you cannot perform on them and operations

132
00:12:18,120 --> 00:12:24,960
on two different other for example you can't add and in these are variable and a string variable.

133
00:12:24,960 --> 00:12:25,730
Let's take that

134
00:12:38,930 --> 00:12:41,040
one.

135
00:12:41,410 --> 00:12:49,090
Now you can perform our domestic operations on the table on these two variables since there are variables

136
00:12:49,090 --> 00:12:50,700
of two different data types.

137
00:12:56,320 --> 00:12:56,680
Sorry.

138
00:12:56,680 --> 00:12:58,080
Actually you need to agree.

139
00:12:58,150 --> 00:13:09,780
You need to get a string variable with a string value and so that it will become fingertip.

140
00:13:10,040 --> 00:13:11,730
Let's take what we have.

141
00:13:17,280 --> 00:13:23,010
Study so we have a S.O.P But let's check the value of string variable

142
00:13:28,040 --> 00:13:28,740
element.

143
00:13:28,850 --> 00:13:41,410
Let's try to add these two.

144
00:13:41,850 --> 00:13:42,610
No.

145
00:13:42,740 --> 00:13:43,720
There you go.

146
00:13:43,780 --> 00:13:49,390
Biden has trial and error saying that your answer put it all right.

147
00:13:49,400 --> 00:13:54,640
I mean you can't add two different names in this that and string.

148
00:13:54,710 --> 00:13:57,960
So this was an error of which was quite a bit.

149
00:13:58,010 --> 00:14:00,860
There are many types of it passing by then.

150
00:14:01,280 --> 00:14:07,680
I mean which comes out of the box you can able to loan them in our future to the audience.

151
00:14:07,820 --> 00:14:15,140
So domestic operations can be bought from the same data type variables but not different variables.

152
00:14:15,210 --> 00:14:22,100
You can you can pull some different data mining operations like multiplication addition and subtraction

153
00:14:22,160 --> 00:14:23,170
etc..

154
00:14:31,000 --> 00:14:38,470
Ok guys that's all for this video and I hope you enjoy it and learn something about the variables and

155
00:14:38,470 --> 00:14:46,750
variable types and multiple assignments and checking just checking the actual datatype of a particular

156
00:14:47,050 --> 00:14:48,610
variable you have created.

157
00:14:49,030 --> 00:14:52,090
Let's do something some something important.

158
00:14:52,130 --> 00:14:55,350
I mean let's learn something important stuff in our next video.

159
00:14:55,390 --> 00:14:56,650
We don't yes.

160
00:14:56,680 --> 00:14:58,460
Thanks thanks very much guys.

